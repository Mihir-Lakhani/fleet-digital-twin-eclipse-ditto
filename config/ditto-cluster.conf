# AUTHORITATIVE Eclipse Ditto 3.5.0 Cluster Configuration
# This is the SINGLE configuration file for all Ditto services
# Replaces the configuration chaos with proper Pekko cluster setup

pekko {
  actor.provider = "cluster"
  
  remote.artery {
    transport = "tcp"
    canonical {
      hostname = ${HOSTNAME}
      port = 2551
    }
    bind {
      hostname = "0.0.0.0"  
      port = 2551
    }
  }
  
  cluster {
    # ALL THREE SERVICES as seed nodes - proper cluster formation
    seed-nodes = [
      "pekko://ditto-cluster@ditto-policies:2551",
      "pekko://ditto-cluster@ditto-things:2551", 
      "pekko://ditto-cluster@ditto-gateway:2551"
    ]
    
    # Wait for all 3 services before cluster is considered formed
    min-nr-of-members = 3
    
    # CORRECT Pekko class reference (not Akka!)
    downing-provider-class = "org.apache.pekko.cluster.sbr.SplitBrainResolverProvider"
    split-brain-resolver {
      active-strategy = "static-quorum"
      static-quorum {
        quorum-size = 2
        role = ""
      }
      stable-after = 20s
    }
    
    # Service roles
    roles = ["${DITTO_SERVICE_ROLE}"]
    
    # Failure detection
    failure-detector {
      acceptable-heartbeat-pause = 10s
      threshold = 12.0
    }
  }
  
  management {
    cluster.bootstrap {
      contact-point-discovery {
        discovery-method = "config"
        required-contact-point-nr = 2  # Need 2 other services
      }
      new-cluster-enabled = on
      # NO self-join - we want proper multi-service clustering
    }
    http {
      hostname = "0.0.0.0"
      port = 8558
    }
  }
  
  # Logging
  loggers = ["org.apache.pekko.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "org.apache.pekko.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = 10
  log-dead-letters-during-shutdown = off
}

# Ditto-specific configuration
ditto {
  gateway {
    http {
      hostname = "0.0.0.0"
      port = 8080
    }
    
    cluster {
      number-of-shards = 1
    }
    
    authentication {
      dummy {
        dummy = true
      }
      devops {
        password = "devops"
        secured = false
      }
    }
    
    # Health check configuration
    health-check {
      enabled = true
      interval = 60s
      service.timeout = 10s
    }
  }
  
  # Service discovery configuration
  service-discovery {
    dummy {
      enabled = false
    }
  }
  
  # Policies service configuration
  policies {
    http {
      hostname = "0.0.0.0" 
      port = 8080
    }
  }
  
  # Things service configuration  
  things {
    http {
      hostname = "0.0.0.0"
      port = 8080
    }
  }
}

# MongoDB connection
pekko.persistence.mongodb.mongo {
  mongouri = "mongodb://"${MONGO_DB_HOSTNAME}":27017/ditto"
  database = "ditto"
  pool {
    minSize = 0
    maxSize = 100
    maxWaitTime = 30s
    maxConnectionLifeTime = 0s
    maxConnectionIdleTime = 0s
    maintenanceInitialDelay = 0s
    maintenanceFrequency = 30s
  }
}