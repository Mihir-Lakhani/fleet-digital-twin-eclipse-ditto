{
  "openapi": "3.0.3",
  "info": {
    "title": "Digital Twin Fleet Management API",
    "description": "Comprehensive API for managing IoT devices, digital twins, and fleet operations using Eclipse Ditto, MQTT, and MongoDB",
    "version": "1.0.0",
    "contact": {
      "name": "Digital Twin Development Team",
      "email": "contact@digitaltwin.local"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Digital Twin Application Server"
    },
    {
      "url": "http://localhost:8080/api/2",
      "description": "Eclipse Ditto API Gateway"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Health Check",
        "description": "Check if the Digital Twin application is running",
        "tags": ["Health"],
        "responses": {
          "200": {
            "description": "Service is running",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/test-connections": {
      "get": {
        "summary": "Test Service Connections",
        "description": "Test connectivity to all backend services (Ditto, MQTT, MongoDB)",
        "tags": ["Health"],
        "responses": {
          "200": {
            "description": "Connection test results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/test": {
      "get": {
        "summary": "CORS Test Endpoint",
        "description": "Test endpoint to verify CORS is working",
        "tags": ["API Testing"],
        "responses": {
          "200": {
            "description": "CORS test successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "CORS test successful"
                    },
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "cors": {
                      "type": "string",
                      "example": "enabled"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/status": {
      "get": {
        "summary": "API Status",
        "description": "Get API status and configuration",
        "tags": ["API Testing"],
        "responses": {
          "200": {
            "description": "API status information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "service": {
                      "type": "string",
                      "example": "Digital Twin API"
                    },
                    "version": {
                      "type": "string",
                      "example": "1.0.0"
                    },
                    "status": {
                      "type": "string",
                      "example": "running"
                    },
                    "cors": {
                      "type": "string",
                      "example": "enabled"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/things": {
      "get": {
        "summary": "List Things",
        "description": "Retrieve all digital twin things from Eclipse Ditto",
        "tags": ["Things"],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Comma-separated list of fields to include in response"
          },
          {
            "name": "option",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Additional options for the request"
          }
        ],
        "responses": {
          "200": {
            "description": "List of things",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Thing"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Thing",
        "description": "Create a new digital twin thing in Eclipse Ditto",
        "tags": ["Things"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Thing"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Thing created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Thing"
                }
              }
            }
          }
        }
      }
    },
    "/things/{thingId}": {
      "get": {
        "summary": "Get Thing",
        "description": "Retrieve a specific digital twin thing by ID",
        "tags": ["Things"],
        "parameters": [
          {
            "name": "thingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier of the thing"
          }
        ],
        "responses": {
          "200": {
            "description": "Thing details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Thing"
                }
              }
            }
          },
          "404": {
            "description": "Thing not found"
          }
        }
      },
      "put": {
        "summary": "Update Thing",
        "description": "Update an existing digital twin thing",
        "tags": ["Things"],
        "parameters": [
          {
            "name": "thingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier of the thing"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Thing"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Thing updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Thing"
                }
              }
            }
          },
          "404": {
            "description": "Thing not found"
          }
        }
      },
      "delete": {
        "summary": "Delete Thing",
        "description": "Delete a digital twin thing",
        "tags": ["Things"],
        "parameters": [
          {
            "name": "thingId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Unique identifier of the thing"
          }
        ],
        "responses": {
          "204": {
            "description": "Thing deleted successfully"
          },
          "404": {
            "description": "Thing not found"
          }
        }
      }
    },
    "/policies": {
      "get": {
        "summary": "List Policies",
        "description": "Retrieve all access control policies",
        "tags": ["Policies"],
        "responses": {
          "200": {
            "description": "List of policies",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Policy"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "running"
          },
          "service": {
            "type": "string",
            "example": "Digital Twin Fleet App"
          },
          "version": {
            "type": "string",
            "example": "1.0.0"
          }
        }
      },
      "ConnectionTestResponse": {
        "type": "object",
        "properties": {
          "ditto": {
            "type": "string",
            "example": "success"
          },
          "mqtt": {
            "type": "string",
            "example": "success"
          },
          "mongodb": {
            "type": "string",
            "example": "success"
          }
        }
      },
      "Thing": {
        "type": "object",
        "properties": {
          "thingId": {
            "type": "string",
            "example": "com.example:vehicle-001"
          },
          "policyId": {
            "type": "string",
            "example": "com.example:vehicle-policy"
          },
          "definition": {
            "type": "string",
            "example": "com.example:VehicleModel:1.0.0"
          },
          "attributes": {
            "type": "object",
            "properties": {
              "manufacturer": {
                "type": "string",
                "example": "Toyota"
              },
              "model": {
                "type": "string",
                "example": "Prius"
              },
              "year": {
                "type": "integer",
                "example": 2023
              }
            }
          },
          "features": {
            "type": "object",
            "properties": {
              "engine": {
                "type": "object",
                "properties": {
                  "properties": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "running"
                      },
                      "rpm": {
                        "type": "number",
                        "example": 2500
                      }
                    }
                  }
                }
              },
              "location": {
                "type": "object",
                "properties": {
                  "properties": {
                    "type": "object",
                    "properties": {
                      "latitude": {
                        "type": "number",
                        "example": 37.7749
                      },
                      "longitude": {
                        "type": "number",
                        "example": -122.4194
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Policy": {
        "type": "object",
        "properties": {
          "policyId": {
            "type": "string",
            "example": "com.example:vehicle-policy"
          },
          "entries": {
            "type": "object",
            "properties": {
              "owner": {
                "type": "object",
                "properties": {
                  "subjects": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  },
                  "resources": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "tags": [
    {
      "name": "Health",
      "description": "Health check and service connectivity endpoints"
    },
    {
      "name": "API Testing",
      "description": "CORS and API testing endpoints"
    },
    {
      "name": "Things",
      "description": "Digital twin thing management via Eclipse Ditto"
    },
    {
      "name": "Policies",
      "description": "Access control policy management"
    }
  ]
}